<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 注解扫描包 -->
	<context:component-scan base-package="com" />


	<!-- 开启注解 -->
	<mvc:annotation-driven />

	<!--
		配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd
	-->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<!--<mvc:resources mapping="/html/**" location="/html/" />-->
	<mvc:resources mapping="/jsp/**" location="/jsp/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />



	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:view-controller path="/" view-name="redirect:/user/index"/>
	
	
	<!--  kisso 注入初始化，也支持使用 web.xml 初始化 -->
	<bean id="kissoInit" class="com.baomidou.kisso.web.WebKissoConfigurer" init-method="initKisso">
		<property name="ssoPropPath" value="sso.properties" />
		<!-- 测试模式 ，不同环境配置选择设置 -->
		<property name="runMode" value="test_mode" />
		<!-- 
		   此处可以注入 SSOConfig 配置属性，也可以定义自己的 kisso 插件，基础 SSOPlugin 抽象类。
		 <property name="pluginList">
		 	<list>
		 		<bean name="com.xxxx.MyPlugin">
		 	</list>
		 </property>
		 -->
	</bean>
	<mvc:interceptors>
		<!-- SSO 拦截器 -->
		<!-- path 对所有的请求拦截使用/**，对某个模块下的请求拦截使用：/myPath/* -->
		<mvc:interceptor>
			<mvc:mapping path="/user/*" />
			<mvc:mapping path="/permission/*" />
			<bean class="com.baomidou.kisso.web.interceptor.SSOSpringInterceptor" />
		</mvc:interceptor>		
	</mvc:interceptors>

</beans>	